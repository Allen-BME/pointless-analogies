# Automatically deploy stack upon push or pull request to main branch if the stack is already active
# Otherwise, the stack must be deployed manually when it's not already active. 

name: AWS Continuous Deployment

on:
  push:
    branches:
      - actions_cd
  pull_request:
    branches:
      - actions_cd

run-name: "Continuous Deployment (@${{ github.actor }})"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Check if stack is deployed
        id: check_stack
        run: |
          STACK_NAME="PointlessAnalogiesStack"
          if ! aws cloudformation describe-stacks --stack-name $STACK_NAME; then
            echo "Stack $STACK_NAME does not exist. Exiting."
            exit 0
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Set up Node
        uses: actions/setup-node@v4
        with: 
          node-version: "20.x"
      - name: Install Python dependencies and CDK
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm install -g aws-cdk
      - name: Bootstrap CDK
        run: cdk bootstrap
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      - name: Deploy CDK Stack
        run: cdk deploy PointlessAnalogiesStack --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
